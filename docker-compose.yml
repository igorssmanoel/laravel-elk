version: '3'
services:
    laravel.test:
        build:
            context: ./docker/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    setup:
        build:
            context: setup/
            args:
                ELASTIC_VERSION: ${ELASTIC_VERSION}
        init: true
        volumes:
            - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
            - ./setup/lib.sh:/lib.sh:ro,Z
            - ./setup/roles:/roles:ro,Z
            - setup:/state:Z
        environment:
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
            LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
            KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
            METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
            FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
            HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
            MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
            BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
        networks:
            - sail
        depends_on:
            - elasticsearch

    elasticsearch:
        build:
            context: elasticsearch/
            args:
                ELASTIC_VERSION: ${ELASTIC_VERSION}
        volumes:
            - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
            - elasticsearch:/usr/share/elasticsearch/data:Z
        ports:
            - 9200:9200
            - 9300:9300
        environment:
            node.name: elasticsearch
            ES_JAVA_OPTS: -Xms512m -Xmx512m
            # Bootstrap password.
            # Used to initialize the keystore during the initial startup of
            # Elasticsearch. Ignored on subsequent runs.
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
            # Use single node discovery in order to disable production mode and avoid bootstrap checks.
            # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
            discovery.type: single-node
        networks:
            - sail
        restart: unless-stopped

    logstash:
        build:
            context: logstash/
            args:
                ELASTIC_VERSION: ${ELASTIC_VERSION}
        volumes:
            - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
            - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
        ports:
            - 5044:5044
            - 50000:50000/tcp
            - 50000:50000/udp
            - 9600:9600
        environment:
            LS_JAVA_OPTS: -Xms256m -Xmx256m
            LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
        networks:
            - sail
        depends_on:
            - elasticsearch
        restart: unless-stopped

    kibana:
        build:
            context: kibana/
            args:
                ELASTIC_VERSION: ${ELASTIC_VERSION}
        volumes:
            - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
        ports:
            - 5601:5601
        environment:
            KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
        networks:
            - sail
        depends_on:
            - elasticsearch
        restart: unless-stopped

networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    setup:
    elasticsearch:
